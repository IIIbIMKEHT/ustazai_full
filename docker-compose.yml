services:
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel_app
    ports:
      - "9000:9000"
    volumes:
      - ./laravel:/var/www/html
    networks:
      - app-network
    environment:
      - DB_HOST=db
      - DB_DATABASE=ustaz
      - DB_USERNAME=root
      - DB_PASSWORD=root
    depends_on:
      - db
    command: >
      sh -c "sleep 10 &&
      composer config --global process-timeout 100000 &&
      composer install &&
      npm install --fetch-timeout=500000 --fetch-retries=30 &&
      npm run build &&
      php artisan key:generate &&
      php artisan migrate --seed &&
      chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache &&
      chmod -R 777 /var/www/html/storage /var/www/html/bootstrap/cache &&
      php-fpm"

  nginx:
    image: nginx:latest
    container_name: nginx_laravel
    ports:
      - "8000:80"
    volumes:
      - ./laravel:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/fastapi.conf:/etc/nginx/conf.d/fastapi.conf
    depends_on:
      - laravel
    networks:
      - app-network

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "5000:5000"
    networks:
      - app-network
    volumes:
      - ./fastapi:/app

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ustaz
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "3306:3306"

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
