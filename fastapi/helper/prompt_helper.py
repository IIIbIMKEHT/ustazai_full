from constants import task_types
from constants.subject import get_subject_by_id
from langchain_core.prompts import PromptTemplate, PipelinePromptTemplate

from constants.task_types import TaskTypes

full_template = """{language_detect}
{content}
{html_parse}"""
full_prompt = PromptTemplate.from_template(full_template)
# Первый шаблон: Определение языка для генерации материала
language_determination_prompt = PromptTemplate.from_template("""
Если выбранный предмет является языком (например, "Английский", "Французский", "Немецкий" и т.д.), генерируйте материал на языке предмета. В противном случае, используйте выбранный язык для генерации материала.
Определенный язык: {language}. 
""")
# Второй шаблон: Определение языка для генерации материала
html_prompt = PromptTemplate.from_template("""
    Если в генерированном материале присутствуют математические формулы, убедитесь, что они представлены в формате MathML. Пример формулы: <math xmlns="http://www.w3.org/1998/Math/MathML"><mn>1</mn> <mo>+</mo> <mn>1</mn></math>.
    Представьте викторину в формате HTML без дополнительных пояснений, используя теги `<h1>`, `<h2>`, `<p>`, `<ul>`, `<li>`, `<strong>`. Не включайте теги `<html>`, `<head>`, `<meta>`, `<doctype>` и НЕ включайте символы ```html или ``` в начале и конце. Контент должен быть оформлен на указанном языке ({language}).

    Добавьте следующие стили к HTML-элементам для улучшения визуального восприятия:
    - `<h1>`: Используйте цвет `#2c3e50`, шрифт 'DejaVuSans', Arial или другой, поддерживающий кириллицу, размер шрифта `28px`, отступы сверху и снизу по `20px`, жирное начертание, центрирование текста и добавьте нижнее подчеркивание.
    - `<h2>`: Используйте цвет `#2980b9`, шрифт 'DejaVuSans', Arial или другой, поддерживающий кириллицу, размер шрифта `24px`, отступы сверху и снизу по `10px`, жирное начертание.
    - `<p>`: Используйте шрифт 'DejaVuSans', Arial или другой, поддерживающий кириллицу, размер шрифта `18px`, межстрочный интервал `1.8`, отступы сверху и снизу `10px`.
    - `<ul>`: Добавьте отступ слева `30px`, используйте межстрочный интервал `1.6`.
    - `<li>`: Используйте шрифт 'DejaVuSans', Arial или другой, поддерживающий кириллицу, размер шрифта `18px`, отступы сверху и снизу `5px`.
    - `<strong>`: Используйте цвет `#e74c3c` для выделения текста.

    Для тестов добавьте следующие стили:
    - Буквенные варианты ответов: Используйте формат `a)`, `b)`, `c)`, `d)` с отступом слева `40px` и шрифтом 'DejaVuSans', Arial или другим, поддерживающим кириллицу.
    - Варианты ответов внутри `<ul>`: Используйте цифры для нумерации вариантов ответа.

    Важно: убедитесь, что ВСЕ математические формулы правильно конвертированы в MathML и вставлены непосредственно в HTML-код. Также убедитесь, что шрифты, используемые в документе, поддерживают кириллицу.
    """
                                           )

# Определение шаблонов для каждого типа задачи
test_prompt = PromptTemplate.from_template("""
Вы — опытный помощник учителя с более чем 15-летним опытом разработки тестов по различным предметам. 
Ваша специализация — создание тестов, которые не только проверяют знания учащихся, но и способствуют их образовательному развитию. 
Вам необходимо разработать тест на следующую тему:
- Предмет: {subject}. 
- Класс: {class_level}. 
- Тема: {topic}. 
- Количество вопросов: {qty}. 
- Уровень сложности: {level_test}.
- Формат вопросов: открытые. 
Каждый вопрос должен иметь 4 варианта ответов, один из которых должен быть отмечен как правильный.
""")

lesson_plan_prompt = PromptTemplate.from_template("""
Вы — опытный помощник учителя с многолетним опытом разработки планов уроков на различные темы на {language} языке.
Вам необходимо разработать структурированный план урока на {language} языке, который будет легко воспринимаем учащимися и способствует их образовательному процессу.

План урока должен включать следующие разделы и быть представлен в формате HTML (без тегов <html>, <head>, <meta>, <doctype>):

1. **Введение**: Опишите вводную часть урока, которая подготавливает учащихся к теме. Постарайтесь сделать ее интересной и информативной.
2. **Основная часть**: Подробно изложите основные идеи урока, методы их преподавания, приведите примеры и практические задания.
3. **Заключение**: Завершите урок подведением итогов и предложите задания для закрепления материала.

В план также необходимо включить вопросы для обсуждения и задания для закрепления материала.

Для работы вам понадобятся следующие данные:
- Предмет: {subject}
- Тема урока: {topic}
- Класс: {class_level}
- Продолжительность: 50 минут

""")

quiz_prompt = PromptTemplate.from_template("""
Вы — умный помощник учителя, обладающий опытом в разработке викторин по различным предметам для учащихся разных классов.
Ваша задача — разработать викторину на тему "{topic}" для {class_level} класса на {language} языке.

Викторина должна включать различные типы вопросов, такие как выбор ответа, открытые вопросы и т.д. Структурируйте материал, используя HTML-теги, и избегайте включения ненужных тегов.

Для викторины используйте следующие данные:
- Длительность урока: 50 минут
- Предмет: {subject}
- Уровень сложности вопросов: {level_test}
- Количество вопросов: {qty}

### Структура викторины:
1. **Вопрос**: Текст вопроса.
   - Вариант ответа 1
   - Вариант ответа 2
   - Вариант ответа 3
   - Вариант ответа 4
   **Правильный ответ:** Укажите правильный вариант ответа.

""")

intellectual_game_prompt = PromptTemplate.from_template("""
Вы — умный ассистент учителя, специализирующийся на разработке увлекательных и образовательных игр для учеников.
Ваша экспертиза заключается в создании интерактивных и интеллектуально стимулирующих занятий, которые соответствуют учебным предметам и подходят для разных классов.
Ваша задача — разработать тематическую интеллектуальную игру для определенного предмета и уровня класса.

Предоставьте следующие данные для игры:
- Предмет: {subject}
- Уровень класса: {class_level}
- Тема игры: {topic}
- Формат игры: квест, настольная игра или цифровая викторина

Игра должна соответствовать следующим критериям:
1. Подходить для целевой возрастной группы
2. Быть увлекательной и интересной для учеников
3. Проверять знания учащихся по теме
4. Поощрять критическое мышление и сотрудничество среди учеников

""")

exercises_prompt = PromptTemplate.from_template("""
Ты — умный помощник учителя, обладающий опытом в разработке обучающих упражнений по различным предметам для учеников разных классов.
Твоя основная цель — создавать разнообразные интерактивные упражнения, которые помогут учащимся глубже усвоить материал и развить необходимые навыки в течение 50-минутного урока.

Предоставьте следующие данные для упражнения:
- Предмет: {subject}
- Класс: {class_level}
- Тема упражнения: {topic}

Учти, что упражнение должно быть четко структурировано, включать ясные инструкции для учеников и соответствовать уровню сложности, подходящему для данного класса.
Упражнение должно способствовать вовлечению учащихся, включая такие элементы, как работа в группах, обсуждения или практические задания.

Пожалуйста, для упражнения используйте следующие разделы:

1. **Введение**: Объясните цель и контекст упражнения.
2. **Инструкции**: Предоставьте пошаговые инструкции для выполнения задания.
3. **Практическая часть**: Опишите задачи или вопросы, которые ученики должны выполнить.
4. **Обсуждение и рефлексия**: Включите вопросы для обсуждения и задания для закрепления материала.

""")

laboratory_prompt = PromptTemplate.from_template("""
Ты — умный помощник учителя, обладающий опытом в разработке учебных материалов и лабораторных работ для различных предметов. 
Твоя задача — создать лабораторную работу по предмету "{subject}" на тему "{topic}" для {class_level} класса.

Лабораторная работа должна включать следующие разделы:

1. **Цели лабораторной работы**: Опиши основные цели работы, что студенты должны понять и чему научиться.
2. **Материалы**: Перечисли все необходимые материалы и оборудование для выполнения работы.
3. **Критерии оценки**: Укажи критерии оценки и методы проверки результатов.
4. **Шаги выполнения**: Подробно опиши пошаговый процесс выполнения лабораторной работы.

""")

summary_prompt = PromptTemplate.from_template("""
Ты умный помощник учителя, обладающий обширными знаниями в области педагогики и способностями к созданию учебных материалов.
Твоя задача — разработать подробный и исчерпывающий конспектный материал по предмету {subject} на тему {topic} для {class_level} класса.
Вот детали, которые необходимо учесть:
- Предмет: {subject}.
- Класс: {class_level}.
- Тема урока: {topic}.
- Длительность урока: 50 минут.
Конспект должен быть максимально подробным и включать следующие элементы:
- Вводное слово с объяснением важности темы и её применением.
- Основные идеи, детализированные с примерами и объяснениями.
- Практическое задание с несколькими сложными задачами и пошаговыми решениями.
- Заключение с обобщением изученного материала и указаниями на дальнейшее углубление знаний.
Учти, что конспект должен быть адаптирован для уровня знаний учащихся данного класса и должен включать все необходимые объяснения и разъяснения.

""")

# Вы можете продолжить добавлять другие шаблоны аналогичным образом...
input_test_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", test_prompt),
    ("html_parse", html_prompt),
]
input_lesson_plan_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", lesson_plan_prompt),
    ("html_parse", html_prompt),
]
input_quiz_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", quiz_prompt),
    ("html_parse", html_prompt),
]
input_intellectual_game_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", intellectual_game_prompt),
    ("html_parse", html_prompt),
]
input_exercises_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", exercises_prompt),
    ("html_parse", html_prompt),
]
input_laboratory_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", laboratory_prompt),
    ("html_parse", html_prompt),
]
input_summary_prompts = [
    ("language_detect", language_determination_prompt),
    ("content", summary_prompt),
    ("html_parse", html_prompt),
]
# Словарь для хранения шаблонов PromptTemplate по типам задач
task_templates = {
    "TEST": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_test_prompts),
    "LESSON_PLAN": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_lesson_plan_prompts),
    "QUIZ": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_quiz_prompts),
    "INTELLECTUAL_GAME": PipelinePromptTemplate(final_prompt=full_prompt,
                                                pipeline_prompts=input_intellectual_game_prompts),
    "EXERCISES": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_exercises_prompts),
    "LABORATORY": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_laboratory_prompts),
    "SUMMARY": PipelinePromptTemplate(final_prompt=full_prompt, pipeline_prompts=input_summary_prompts),
}


# Определяем язык до использования в шаблоне
def determine_language(subject, language):
    if subject in ["Английский язык", "Русский язык"]:
        return subject
    return language


# Функция генерации промпта
def get_prompt(class_level: str, subject_id: int, topic: str, task_type: int, is_kk: bool = True, qty: int = None,
               level_test: str = None):
    subject = get_subject_by_id(subject_id)

    # Подготовка значений по умолчанию
    if is_kk is True:
        interface_lang = 'казахском'
    else:
        interface_lang = 'русском'

    lang = determine_language(subject, interface_lang)
    if level_test is None:
        level_test = 'средний'

    # Преобразование task_type в объект TaskTypes
    try:
        task_type_enum = TaskTypes(task_type)
    except ValueError:
        return "Неизвестный тип задачи. Пожалуйста, выберите корректный тип задачи."

    # Используем TaskTypes для выбора шаблона
    if task_type_enum.name in task_templates:
        template = task_templates[task_type_enum.name]
        return template.format(
            class_level=class_level,
            subject=subject,
            topic=topic,
            qty=qty,
            level_test=level_test,
            language=lang
        )
    else:
        return "Неизвестный тип задачи. Пожалуйста, выберите корректный тип задачи."
